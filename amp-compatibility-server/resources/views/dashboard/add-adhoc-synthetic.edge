@layout( 'dashboard/base' )

@section('page')

	<form action="add" method="POST">
		@if(successNotification)
			<div class="row">
				<p class="col-sm-12 text-success">{{ successNotification }}</p>
			</div>
		@endif
		@if(errorNotification)
			<div class="row">
				<p class="col-sm-12 text-danger">{{ errorNotification }}</p>
			</div>
		@endif
		<div class="form-group row">
			<label for="theme" class="col-sm-2 col-form-label">Theme</label>
			<div class="col-sm-10">
				<input id="theme" name="theme" type="text" class="form-control theme-autocomplete"
					   placeholder="e.g. treville">
			</div>
		</div>

		<div class="form-group row">
			<label for="plugins" class="col-sm-2 col-form-label">Plugins</label>
			<div class="col-sm-10" id="plugin-list">
				<div id="pluginClone" class="input-group mb-2 d-none plugin-item">
					<input type="text" name="plugins[]" class="form-control plugin-autocomplete" autocomplete="off"
						   placeholder="e.g. woocommerce">
					<button type="button" class="btn btn-secondary btn-remove-plugin">-</button>
				</div>
				<div class="input-group mb-2 plugin-item">
					<input type="text" name="plugins[]" class="form-control plugin-autocomplete" autocomplete="off"
						   placeholder="e.g. woocommerce">
					<button type="button" class="btn btn-secondary btn-remove-plugin">-</button>
				</div>
			</div>
		</div>
		<div class="form-group row">
			<div class="col-sm-12 text-end">
				<button id="addNewPlugin" type="button" class="btn btn-secondary">Add Plugin</button>
				<button class="btn btn-primary">Submit</button>
			</div>
		</div>
	</form>

@endsection

@section('script')
	{{ script('js/jquery-ui') }}
	{{ style('css/jquery-ui') }}

	<script type="application/javascript">

		window.addEventListener( 'DOMContentLoaded', function ( event ) {
			var addAdhocSyntheticData = {

				init: function () {

					this.preparePluginRow();
					this.themeAutocomplete();

					$( '#addNewPlugin' ).on( 'click', () => {
						var clonedItem = $( '#pluginClone' ).clone();

						clonedItem.removeAttr( 'id' );
						clonedItem.removeClass( 'd-none' );

						$( '#plugin-list' ).append( clonedItem );
						this.preparePluginRow();
					} );

				},

				preparePluginRow: function () {

					jQuery( '.plugin-autocomplete' ).autocomplete( {
						minLength: 3,
						source: '/api/v1/list-plugins',
					} );

					jQuery( '.btn-remove-plugin' ).on( 'click', function () {
						$( this ).parent( '.plugin-item' ).remove();
					} );

				},

				themeAutocomplete: function () {

					jQuery( '.theme-autocomplete' ).autocomplete( {
						minLength: 3,
						source: '/api/v1/list-themes',
					} );

				},

			};
			addAdhocSyntheticData.init();
		} );
	</script>
@endsection
